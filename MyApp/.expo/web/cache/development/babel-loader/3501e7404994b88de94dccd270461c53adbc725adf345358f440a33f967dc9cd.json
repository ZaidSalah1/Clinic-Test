{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _createIconSet = _interopRequireDefault(require(\"./createIconSet\"));\nfunction _default(config, expoFontName, expoAssetId) {\n  var glyphMap = {};\n  config.icons.forEach(function (icon) {\n    icon.properties.name.split(/\\s*,\\s*/g).forEach(function (name) {\n      glyphMap[name] = icon.properties.code;\n    });\n  });\n  var fontFamily = expoFontName || config.preferences.fontPref.metadata.fontFamily;\n  return (0, _createIconSet.default)(glyphMap, fontFamily, expoAssetId || `${fontFamily}.ttf`);\n}","map":{"version":3,"names":["_createIconSet","_interopRequireDefault","require","_default","config","expoFontName","expoAssetId","glyphMap","icons","forEach","icon","properties","name","split","code","fontFamily","preferences","fontPref","metadata","createIconSet"],"sources":["C:\\Users\\zaid\\Desktop\\cli\\MyApp\\node_modules\\@expo\\vector-icons\\src\\createIconSetFromIcoMoon.ts"],"sourcesContent":["import createIconSet from './createIconSet';\n\nexport default function (config, expoFontName, expoAssetId) {\n  const glyphMap = {};\n  config.icons.forEach((icon) => {\n    icon.properties.name.split(/\\s*,\\s*/g).forEach((name) => {\n      glyphMap[name] = icon.properties.code;\n    });\n  });\n\n  const fontFamily = expoFontName || config.preferences.fontPref.metadata.fontFamily;\n\n  return createIconSet<string, string>(glyphMap, fontFamily, expoAssetId || `${fontFamily}.ttf`);\n}\n"],"mappings":";;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEc,SAAAC,SAAWC,MAAM,EAAEC,YAAY,EAAEC,WAAW;EACxD,IAAMC,QAAQ,GAAG,EAAE;EACnBH,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI,EAAI;IAC5BA,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC,CAACJ,OAAO,CAAC,UAACG,IAAI,EAAI;MACtDL,QAAQ,CAACK,IAAI,CAAC,GAAGF,IAAI,CAACC,UAAU,CAACG,IAAI;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAMC,UAAU,GAAGV,YAAY,IAAID,MAAM,CAACY,WAAW,CAACC,QAAQ,CAACC,QAAQ,CAACH,UAAU;EAElF,OAAO,IAAAI,sBAAa,EAAiBZ,QAAQ,EAAEQ,UAAU,EAAET,WAAW,IAAI,GAAGS,UAAU,MAAM,CAAC;AAChG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}